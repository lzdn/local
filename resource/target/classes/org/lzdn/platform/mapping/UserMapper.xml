<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lzdn.platform.dao.UserMapper">
	<resultMap id="BaseResultMap" type="org.lzdn.platform.entity.User">
		<id column="userId" property="userId" jdbcType="INTEGER" />
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="passWord" property="passWord" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		userId, userName, passWord, email
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="org.lzdn.platform.entity.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where userId = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where userId = #{userId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="org.lzdn.platform.entity.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.lzdn.platform.entity.User">
		insert into user (userId,
		userName, passWord,
		email)
		values (#{userId,jdbcType=INTEGER},
		#{userName,jdbcType=VARCHAR},
		#{passWord,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="org.lzdn.platform.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				userId,
			</if>
			<if test="userName != null">
				userName,
			</if>
			<if test="passWord != null">
				passWord,
			</if>
			<if test="email != null">
				email,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				#{passWord,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.lzdn.platform.entity.UserExample"
		resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.userId != null">
				userId = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.userName != null">
				userName = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.passWord != null">
				passWord = #{record.passWord,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set userId = #{record.userId,jdbcType=INTEGER},
		userName =
		#{record.userName,jdbcType=VARCHAR},
		passWord =
		#{record.passWord,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.lzdn.platform.entity.User">
		update user
		<set>
			<if test="userName != null">
				userName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="passWord != null">
				passWord = #{passWord,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
		</set>
		where userId = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.lzdn.platform.entity.User">
		update user
		set
		userName = #{userName,jdbcType=VARCHAR},
		passWord =
		#{passWord,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR}
		where
		userId = #{userId,jdbcType=INTEGER}
	</update>
	<select id="selectBySelective" parameterType="org.lzdn.common.utils.Page"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<where>
				<if test="params.user.userName != null">
					userName like #{params.user.userName,jdbcType=VARCHAR}
				</if>
			</where>
		</if>
		order by userId
	</select>
</mapper>