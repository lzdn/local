<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder location="classpath:jdbc.properties"
		ignore-unresolvable="true" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- MySQL数据库配置 -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${ds.initialSize}" />
		<property name="minIdle" value="${ds.minIdle}" />
		<property name="maxActive" value="${ds.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${ds.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${ds.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${ds.minEvictableIdleTimeMillis}" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="${ds.poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${ds.maxOpenPreparedStatements}" />
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat,log4j,wall" />
	</bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 这里配置在jar包中的hbm.xml文件 -->
		<!-- <property name="mappingJarLocations"> <list> <value>/WEB-INF/lib/sinosoft-material.jar</value> 
			<value>/WEB-INF/lib/ins-base-resource.jar</value> </list> </property> -->
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<!-- <property name="mappingLocations"> -->
		<!-- 这里配置不在jar包中的hbm.xml文件，建议使用通配符配置 -->
		<!-- <list> <value>classpath:com/weixin/platform/mapping/*.xml</value> 
			<value>classpath:org/sys/platform/mapping/*.xml</value> </list> </property> -->
<!-- 批量扫描别名 -->
	<!-- <property name="typeAliasesPackage" value="ssm.po" /> -->
		<property name="mapperLocations" value="classpath*:org/**/mapping/*.xml" />
		<!-- <property name="configLocation" value="classpath:SqlMapConfig.xml" 
			/> -->
		<property name="plugins">
			<bean class="org.lzdn.platform.filter.MybatisSpringPageInterceptor"></bean>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!--basePackage指定要扫描的包，在此包之下的映射器都会被 搜索到。可指定多个包，包与包之间用逗号或分号分隔 -->
		<property name="basePackage" value="org.lzdn.**.dao" />
	</bean>

	<!-- 获取Service方法调用时间的拦截器，minTime单位为毫秒，通过在transactionProxy的interceptorNames中添加 
		runTimeLogAdvice启用此机制 -->
	<bean id="runTimeLogAdvice" class="org.lzdn.platform.filter.RunTimeLogAdvice">
		<property name="minTime" value="4000" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<!-- 配置事务属性 -->
		<property name="transactionAttributes">
			<props>
				<prop key="query*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="findPolicy">PROPAGATION_SUPPORTS,ISOLATION_READ_UNCOMMITTED,readOnly
				</prop>
				<prop key="get*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="add*">PROPAGATION_REQUIRED</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="insert*">PROPAGATION_REQUIRED</prop>
				<prop key="update*">PROPAGATION_REQUIRED</prop>
				<prop key="modify*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
				<prop key="put*">PROPAGATION_REQUIRED</prop>
				<prop key="*">readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionProxy"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
				<value>runTimeLogAdvice</value>
			</list>
		</property>
	</bean>

</beans>